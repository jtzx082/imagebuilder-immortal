name: Build OpenWRT Firmware

on:
  workflow_dispatch:  # 手动触发以控制Release创建（可修改为 push: branches: - main）

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          sudo apt-get update  
          sudo bash -c 'bash <(curl -s https://build-scripts.immortalwrt.org/init_build_environment.sh)'

      - name: Download ImageBuilder
        run: |
          wget https://downloads.immortalwrt.org/releases/24.10.2/targets/x86/64/immortalwrt-imagebuilder-24.10.2-x86-64.Linux-x86_64.tar.zst

      - name: Decompress ImageBuilder
        run: |
          tar -I zstd -xvf immortalwrt-imagebuilder-24.10.2-x86-64.Linux-x86_64.tar.zst
          cd immortalwrt-imagebuilder-24.10.2-x86-64.Linux-x86_64

      - name: Copy Custom IPKs
        run: |
          cd immortalwrt-imagebuilder-24.10.2-x86-64.Linux-x86_64
          mkdir -p packages  # 创建 packages 目录作为本地仓库
          cp ../../custom-packages/*.ipk packages/ || true  # 复制自定义 IPK（忽略如果无文件）

      - name: Build Firmware
        run: |
          cd immortalwrt-imagebuilder-24.10.2-x86-64.Linux-x86_64
          make image PROFILE="generic" PACKAGES="$(cat ../../packages.txt)" FILES="../../files/" ROOTFS_PARTSIZE=1024

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: openwrt-firmware
          path: immortalwrt-imagebuilder-24.10.2-x86-64.Linux-x86_64/bin/targets/x86/64/*.img.gz

      - name: Release Firmware
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # 使用默认 token
        run: |
          cd immortalwrt-imagebuilder-24.10.2-x86-64.Linux-x86_64/bin/targets/x86/64/
          RELEASE_TAG="v$(date +%Y%m%d)"
          gh release create $RELEASE_TAG --title "Firmware Build $RELEASE_TAG" --notes "Automated ImmortalWRT build with custom IPKs and configs."
          gh release upload $RELEASE_TAG *.img.gz
